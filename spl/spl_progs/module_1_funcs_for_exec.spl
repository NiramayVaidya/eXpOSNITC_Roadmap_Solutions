alias functionNum R1;
alias terminatePID R2;

if (functionNum == 2) then
    alias userAreaPageNumber R3;
    userAreaPageNumber = [PROCESS_TABLE + terminatePID * 16 + 11];

    multipush(R1, R2, R3);
    R1 = 2;
    R2 = userAreaPageNumber;
    
    call MEMORY_MANAGER;
    
    multipop(R1, R2, R3);
endif;

if (functionNum == 3) then
    multipush(R1, R2);
    R1 = 4;
    
    call PROCESS_MANAGER;
    
    R1 = 2;
    
    call PROCESS_MANAGER;
    
    multipop(R1, R2);
    
    [PROCESS_TABLE + terminatePID * 16 + 4] = TERMINATED;
endif;

if (functionNum == 4) then
    PTBR = PAGE_TABLE_BASE + terminatePID * 20;
    [PTBR] = -1;
    [PTBR + 1] = "0000";
    [PTBR + 2] = -1;
    [PTBR + 3] = "0000";
    
    alias iter R3;
    iter = 0;
    while (iter < (2 + 4 + 2)) do
        if ([PTBR + 4 + iter * 2] != -1 && [PTBR + 4 + iter * 2 + 1] != "0000") then
            alias userAreaPageNumber R4;
            userAreaPageNumber = [PTBR + 4 + iter * 2];

            multipush(R1, R2, R3, R4);
            R1 = 2;
            R2 = userAreaPageNumber;
            
            call MEMORY_MANAGER;
            
            multipop(R1, R2, R3, R4);
        endif;
        
        iter = iter + 1;
    endwhile;
endif;

return;
