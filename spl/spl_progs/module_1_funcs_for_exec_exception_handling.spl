alias functionNum R1;
alias terminatePID R2;

if (functionNum == FREE_USER_AREA_PAGE) then
    alias userAreaPageNumber R3;
    userAreaPageNumber = [PROCESS_TABLE + terminatePID * 16 + 11];

    multipush(R1, R2, R3);
    R1 = RELEASE_PAGE;
    R2 = userAreaPageNumber;
    
    call MEMORY_MANAGER;
    
    multipop(R1, R2, R3);
endif;

if (functionNum == EXIT_PROCESS) then
    multipush(R1, R2);
    R1 = FREE_PAGE_TABLE;
    
    call PROCESS_MANAGER;
    
    R1 = FREE_USER_AREA_PAGE;
    
    call PROCESS_MANAGER;
    
    multipop(R1, R2);
    
    [PROCESS_TABLE + terminatePID * 16 + 4] = TERMINATED;
endif;

if (functionNum == FREE_PAGE_TABLE) then
    PTBR = PAGE_TABLE_BASE + terminatePID * 20;
    [PTBR] = -1;
    [PTBR + 1] = "0000";
    [PTBR + 2] = -1;
    [PTBR + 3] = "0000";
    
    alias iter R3;
    iter = 0;
    while (iter < (2 + 4 + 2)) do
        if ([PTBR + 4 + iter * 2] != -1 && [PTBR + 4 + iter * 2 + 1] != "0000") then
            alias userAreaPageNumber R4;
            userAreaPageNumber = [PTBR + 4 + iter * 2];

            multipush(R1, R2, R3, R4);
            R1 = RELEASE_PAGE;
            R2 = userAreaPageNumber;
            
            call MEMORY_MANAGER;
            
            multipop(R1, R2, R3, R4);
        endif;
        
        iter = iter + 1;
    endwhile;
    
    if ([DISK_MAP_TABLE + terminatePID * 10 + 2] != -1) then
        multipush(R1, R2, R3, R4);
        R1 = RELEASE_BLOCK;
        R2 = [DISK_MAP_TABLE + terminatePID * 10 + 2];
        
        call MEMORY_MANAGER;
        
        multipop(R1, R2, R3, R4);
    endif;
    
    if ([DISK_MAP_TABLE + terminatePID * 10 + 3] != -1) then
        multipush(R1, R2, R3, R4);
        R1 = RELEASE_BLOCK;
        R2 = [DISK_MAP_TABLE + terminatePID * 10 + 3];
        
        call MEMORY_MANAGER;
        
        multipop(R1, R2, R3, R4);
    endif;
    
    if ([DISK_MAP_TABLE + terminatePID * 10 + 8] != -1) then
        multipush(R1, R2, R3, R4);
        R1 = RELEASE_BLOCK;
        R2 = [DISK_MAP_TABLE + terminatePID * 10 + 8];
        
        call MEMORY_MANAGER;
        
        multipop(R1, R2, R3, R4);
    endif;
    
    if ([DISK_MAP_TABLE + terminatePID * 10 + 9] != -1) then
        multipush(R1, R2, R3, R4);
        R1 = RELEASE_BLOCK;
        R2 = [DISK_MAP_TABLE + terminatePID * 10 + 9];
        
        call MEMORY_MANAGER;
        
        multipop(R1, R2, R3, R4);
    endif;
    
    iter = 2;
    while (iter < 10) do
        [DISK_MAP_TABLE + terminatePID * 10 + iter] = -1;
        iter = iter + 1;
    endwhile;
endif;

return;
